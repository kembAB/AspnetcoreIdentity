#pragma checksum "C:\Users\Benjamin\Documents\GitHub\Lexicon-MVCBasics\WebApplication1\WebApplication1\Views\Home\Projects.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "41771b22495e8239893cd2c514cd84bbd9cc98b7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Projects), @"mvc.1.0.view", @"/Views/Home/Projects.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"41771b22495e8239893cd2c514cd84bbd9cc98b7", @"/Views/Home/Projects.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a9af4978b9c2bfca24ef48e96efe5f8573634464", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Projects : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Benjamin\Documents\GitHub\Lexicon-MVCBasics\WebApplication1\WebApplication1\Views\Home\Projects.cshtml"
  
    ViewBag.Title = "Projects";
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h2>");
#nullable restore
#line 8 "C:\Users\Benjamin\Documents\GitHub\Lexicon-MVCBasics\WebApplication1\WebApplication1\Views\Home\Projects.cshtml"
Write(ViewBag.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h2>

<div class=""projects-container"">
    <div class=""project"">
        <h1>Lexicon Calculator Assigment</h1>
        <p>This is the first assignment i got from my Education at Lexicon, which involved making a small calculator console application</p>
        <a href=""https://github.com/UnboundKey/LexiconAssignment1-Calculator"">Github Link</a>
    </div>
    
    <div class=""project"">
        <h1>Lexicon Hangman Assignment</h1>
        <p>In this assignment, we got to recreate the game hangman as a terminal application, i also went the extra mile and made it so that you can supply your own wordlist and play with that instead of the built in one.</p>
        <a href=""https://github.com/UnboundKey/LexiconAssignment2-Hangman"">Github Link</a>
    </div>
    
    <div class=""project"">
        <h1>Lexicon Calculator XUnit Testing Assigment</h1>
        <p>Here we went back to the first assignment again and rewrote it to make unit-testing possible</p>
        <a href=""https://github.com/UnboundKey");
            WriteLiteral(@"/LexiconAssignment3-Calculator-UnitTesting"">Github Link</a>
    </div>
    
    <div class=""project"">
        <h1>Lexicon Vending Machine Assigment</h1>
        <p>In this assignment we were taught about Interfaces, Inheritance, and how to use them to make extensions easier. To do this we made a Vending Machine and an interface for it. It keeps track of how much money you put in and if you can buy items. It will also return the amount of change once the user decides to finish a transaction</p>
        <a href=""https://github.com/UnboundKey/LexiconAssignment4-VendingMachine"">Github Link</a>
    </div>
    
    <div class=""project"">
        <h1>Lexicon FrontEnd Assignment 1: HTML</h1>
        <p>Here we were tought about html and how to use it to make the skeleton of a web page</p>
        <a href=""https://github.com/UnboundKey/LexiconFEAssignment1"">Github Link</a>
    </div>
    
    <div class=""project"">
        <h1>Lexicon FrontEnd Assignment 2: CSS</h1>
        <p>In this assignment we adde");
            WriteLiteral(@"d css to the webpage we had made in the previous assigment, according to the specs we were given</p>
        <a href=""https://github.com/UnboundKey/LexiconFEAssignment2"">Github Link</a>
    </div>
    
    <div class=""project"">
            <h1>Lexicon SokobanJS Assignment</h1>
            <p>In this assignment we were given the task of recreating the block pushing puzzle game sokoban in Javascript.</p>
        <a href=""https://github.com/UnboundKey/SokobanJS"">Github Link</a>
        <a href=""https://sockless.se/sokobanjs"">Play it Here</a>
        </div>
    

</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
